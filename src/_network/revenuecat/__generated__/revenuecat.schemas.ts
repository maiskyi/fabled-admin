/**
 * Generated by orval v7.2.0 üç∫
 * Do not edit manually.
 * Developer API
 * OpenAPI spec version: 2.0.0
 */
export type ListCustomerInvoicesParams = {
  starting_after?: string;
  limit?: number;
};

export type ListCustomerAliasesParams = {
  starting_after?: string;
  limit?: number;
};

export type ListCustomerActiveEntitlementsParams = {
  starting_after?: string;
  limit?: number;
};

export type ListPurchasesEnvironment =
  (typeof ListPurchasesEnvironment)[keyof typeof ListPurchasesEnvironment];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ListPurchasesEnvironment = {
  sandbox: "sandbox",
  production: "production",
} as const;

export type ListPurchasesParams = {
  environment?: ListPurchasesEnvironment;
  starting_after?: string;
  limit?: number;
};

export type ListPurchaseEntitlementsParams = {
  starting_after?: string;
  limit?: number;
};

export type ListSubscriptionsEnvironment =
  (typeof ListSubscriptionsEnvironment)[keyof typeof ListSubscriptionsEnvironment];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ListSubscriptionsEnvironment = {
  sandbox: "sandbox",
  production: "production",
} as const;

export type ListSubscriptionsParams = {
  environment?: ListSubscriptionsEnvironment;
  starting_after?: string;
  limit?: number;
};

export type ListSubscriptionEntitlementsParams = {
  starting_after?: string;
  limit?: number;
};

export type DetachProductsFromPackageBody = {
  /**
   * IDs of the products to detach from the package
   * @minLength 1
   * @maxLength 50
   */
  product_ids: string[];
};

export type AttachProductsToPackageBody = {
  /**
   * Product association list
   * @minLength 1
   * @maxLength 50
   */
  products: PackageProductIDAssociation[];
};

export type GetProductsFromPackageParams = {
  starting_after?: string;
  limit?: number;
};

export type CreatePackagesBody = {
  /**
   * The display name of the package
   * @minLength 1
   * @maxLength 1500
   */
  display_name: string;
  /**
   * The lookup_key of the package
   * @minLength 1
   * @maxLength 200
   */
  lookup_key: string;
  /** The position of the package in the offering */
  position?: number;
};

/**
 * @minLength 1
 * @maxLength 5000
 */
export type ListPackagesExpandItem =
  (typeof ListPackagesExpandItem)[keyof typeof ListPackagesExpandItem];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ListPackagesExpandItem = {
  itemsproduct: "items.product",
} as const;

export type ListPackagesParams = {
  starting_after?: string;
  limit?: number;
  /**
 * Specifies which fields in the response should be expanded.
 Accepted values are: `items.product` (requires `project_configuration:products:read` permissions).
 */
  expand?: ListPackagesExpandItem[];
};

export type UpdatePackageBody = {
  /**
   * The display name of the package
   * @minLength 1
   * @maxLength 1500
   */
  display_name?: string;
  /**
   * The position of the package within the offering
   * @minimum 1
   */
  position?: number;
};

/**
 * @minLength 1
 * @maxLength 5000
 */
export type GetPackageExpandItem =
  (typeof GetPackageExpandItem)[keyof typeof GetPackageExpandItem];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetPackageExpandItem = {
  product: "product",
} as const;

export type GetPackageParams = {
  /**
 * Specifies which fields in the response should be expanded.
 Accepted values are: `product` (requires `project_configuration:products:read` permissions).
 */
  expand?: GetPackageExpandItem[];
};

export type CreateOfferingBody = {
  /**
   * The display_name of the offering
   * @minLength 1
   * @maxLength 1500
   */
  display_name: string;
  /**
   * The custom identifier of the offering
   * @minLength 1
   * @maxLength 200
   */
  lookup_key: string;
  /**
   * Custom metadata of the offering
   * @nullable
   */
  metadata?: OfferingMetadata;
};

/**
 * @minLength 1
 * @maxLength 5000
 */
export type ListOfferingsExpandItem =
  (typeof ListOfferingsExpandItem)[keyof typeof ListOfferingsExpandItem];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ListOfferingsExpandItem = {
  itemspackage: "items.package",
  itemspackageproduct: "items.package.product",
} as const;

export type ListOfferingsParams = {
  starting_after?: string;
  limit?: number;
  /**
 * Specifies which fields in the response should be expanded.
 Accepted values are: `items.package` (requires `project_configuration:packages:read` permissions), `items.package.product` (requires `project_configuration:products:read` permissions).
 */
  expand?: ListOfferingsExpandItem[];
};

export type UpdateOfferingBody = {
  /**
   * The display name of the offering
   * @minLength 1
   * @maxLength 1500
   */
  display_name?: string;
  /** Indicates if the offering is the current offering */
  is_current?: boolean;
  /**
   * Custom metadata of the offering
   * @nullable
   */
  metadata?: OfferingMetadata;
};

/**
 * @minLength 1
 * @maxLength 5000
 */
export type GetOfferingExpandItem =
  (typeof GetOfferingExpandItem)[keyof typeof GetOfferingExpandItem];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetOfferingExpandItem = {
  package: "package",
  packageproduct: "package.product",
} as const;

export type GetOfferingParams = {
  /**
 * Specifies which fields in the response should be expanded.
 Accepted values are: `package` (requires `project_configuration:packages:read` permissions), `package.product` (requires `project_configuration:products:read` permissions).
 */
  expand?: GetOfferingExpandItem[];
};

export type DetachProductsFromEntitlementBody = {
  /**
   * IDs of the products to be detached from the entitlement.
   * @minLength 1
   * @maxLength 50
   */
  product_ids: string[];
};

export type AttachProductsToEntitlementBody = {
  /**
   * IDs of the products to be attached to the entitlement.
   * @minLength 1
   * @maxLength 50
   */
  product_ids: string[];
};

export type GetProductsFromEntitlementParams = {
  starting_after?: string;
  limit?: number;
};

export type CreateEntitlementBody = {
  /**
   * The display name of the entitlement
   * @minLength 1
   * @maxLength 1500
   */
  display_name: string;
  /**
   * The identifier of the entitlement
   * @minLength 1
   * @maxLength 200
   */
  lookup_key: string;
};

/**
 * @minLength 1
 * @maxLength 5000
 */
export type ListEntitlementsExpandItem =
  (typeof ListEntitlementsExpandItem)[keyof typeof ListEntitlementsExpandItem];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ListEntitlementsExpandItem = {
  itemsproduct: "items.product",
} as const;

export type ListEntitlementsParams = {
  starting_after?: string;
  limit?: number;
  /**
 * Specifies which fields in the response should be expanded.
 Accepted values are: `items.product` (requires `project_configuration:products:read` permissions).
 */
  expand?: ListEntitlementsExpandItem[];
};

export type UpdateEntitlementBody = {
  /**
   * The display name of the entitlement
   * @minLength 1
   * @maxLength 1500
   */
  display_name: string;
};

/**
 * @minLength 1
 * @maxLength 5000
 */
export type GetEntitlementExpandItem =
  (typeof GetEntitlementExpandItem)[keyof typeof GetEntitlementExpandItem];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetEntitlementExpandItem = {
  product: "product",
} as const;

export type GetEntitlementParams = {
  /**
 * Specifies which fields in the response should be expanded.
 Accepted values are: `product` (requires `project_configuration:products:read` permissions).
 */
  expand?: GetEntitlementExpandItem[];
};

export type CreateProductBody = {
  /**
   * The ID of the app
   * @minLength 1
   * @maxLength 255
   */
  app_id: string;
  /**
   * The display name of the product
   * @minLength 1
   * @maxLength 1500
   * @nullable
   */
  display_name?: string | null;
  /**
   * The store identifier of the product.
- For Apple App Store products this is the product ID of the subscription or in-app product.
- For Google's Play Store, it should follow the format 'productId:basePlanId' for subscription products and SKU for one-time purchase products.
- For Stripe, the product identifier that always starts with "prod_"
- For Amazon, if it's a subscription, the term SKU of the subscription. If it's a one-time purchase, the SKU of the product.
- For Roku, this is the product identifier of the subscription or one-time purchase product.

   * @minLength 1
   * @maxLength 200
   */
  store_identifier: string;
  /**
   * The product type
   */
  type: ProductType;
};

/**
 * @minLength 1
 * @maxLength 5000
 */
export type ListProductsExpandItem =
  (typeof ListProductsExpandItem)[keyof typeof ListProductsExpandItem];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ListProductsExpandItem = {
  itemsapp: "items.app",
} as const;

export type ListProductsParams = {
  /**
   * This is an optional query parameter to get a list of products of a given entitlement associated with a particular app
   */
  app_id?: string;
  starting_after?: string;
  limit?: number;
  /**
 * Specifies which fields in the response should be expanded.
 Accepted values are: `items.app` (requires `project_configuration:apps:read` permissions).
 */
  expand?: ListProductsExpandItem[];
};

/**
 * @minLength 1
 * @maxLength 5000
 */
export type GetProductExpandItem =
  (typeof GetProductExpandItem)[keyof typeof GetProductExpandItem];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetProductExpandItem = {
  app: "app",
} as const;

export type GetProductParams = {
  /**
 * Specifies which fields in the response should be expanded.
 Accepted values are: `app` (requires `project_configuration:apps:read` permissions).
 */
  expand?: GetProductExpandItem[];
};

/**
 * The name of the attribute
 * @minLength 1
 * @maxLength 40
 */
export type CreateCustomerBodyAttributesItemName =
  | CustomerAttributeReservedName
  | CustomerAttributeCustomName;

export type CreateCustomerBodyAttributesItem = {
  /**
   * The name of the attribute
   * @minLength 1
   * @maxLength 40
   */
  name?: CreateCustomerBodyAttributesItemName;
  /**
   * The value of the attribute
   * @maxLength 500
   */
  value?: string;
};

export type CreateCustomerBody = {
  /** @maxLength 50 */
  attributes?: CreateCustomerBodyAttributesItem[];
  /**
   * The ID of the customer
   * @minLength 1
   * @maxLength 1500
   * @pattern ^[0-9a-zA-Z_-]*$
   */
  id: string;
};

export type ListCustomersParams = {
  starting_after?: string;
  limit?: number;
};

/**
 * Stripe type details. Should only be used when type is stripe.
 */
export type UpdateAppBodyStripe = {
  /**
   * It needs to be connected to your RevenueCat account. It can be omitted if you only have a single Stripe account connected to your RevenueCat account.
   * @minLength 1
   * @maxLength 256
   */
  stripe_account_id?: string;
};

/**
 * Roku Channel Store type details. Should only be used when type is roku.
 */
export type UpdateAppBodyRoku = {
  /**
   * Roku Pay API key provided on the Roku Pay Web Services page.
   * @minLength 33
   * @maxLength 33
   * @nullable
   */
  roku_api_key?: string | null;
  /**
   * Channel ID provided on the Roku Channel page.
   * @minLength 6
   * @maxLength 6
   * @nullable
   */
  roku_channel_id?: string | null;
  /**
   * Channel name that is displayed on the Roku Channel page.
   * @minLength 1
   * @maxLength 30
   * @nullable
   */
  roku_channel_name?: string | null;
};

/**
 * RevenueCat Billing type details. Should only be used when type is rc_billing.
 */
export type UpdateAppBodyRcBilling = {
  default_currency?: RCBillingCurrency;
  /**
   * The company name.
   * @minLength 1
   * @maxLength 256
   * @nullable
   */
  seller_company_name?: string | null;
  /**
   * The company support email.
   * @minLength 1
   * @maxLength 320
   * @nullable
   */
  seller_company_support_email?: string | null;
  /**
   * It needs to be connected to your RevenueCat account. It can be omitted if you only have a single Stripe account connected to your RevenueCat account.
   * @minLength 1
   * @maxLength 256
   * @nullable
   */
  stripe_account_id?: string | null;
};

/**
 * Play Store type details. Should only be used when type is play_store.
 */
export type UpdateAppBodyPlayStore = {
  /**
   * The package name of the app
   * @minLength 1
   * @maxLength 256
   */
  package_name: string;
};

/**
 * Legacy Mac App Store type details. Should only be used when type is mac_app_store.
 */
export type UpdateAppBodyMacAppStore = {
  /**
   * The bundle ID of the app
   * @minLength 1
   * @maxLength 256
   */
  bundle_id?: string;
  /**
   * The shared secret of the app
   * @minLength 32
   * @maxLength 32
   * @nullable
   */
  shared_secret?: string | null;
};

/**
 * App Store type details. Should only be used when type is app_store.
 */
export type UpdateAppBodyAppStore = {
  /**
   * The bundle ID of the app
   * @minLength 1
   * @maxLength 256
   */
  bundle_id?: string;
  /**
   * The shared secret of the app
   * @minLength 32
   * @maxLength 32
   * @nullable
   */
  shared_secret?: string | null;
};

/**
 * Amazon type details. Should only be used when type is amazon.
 */
export type UpdateAppBodyAmazon = {
  /**
   * The package name of the app
   * @minLength 1
   * @maxLength 256
   */
  package_name?: string;
  /**
   * Your Amazon Developer Identity Shared Key
   * @nullable
   */
  shared_secret?: string | null;
};

export type UpdateAppBody = {
  /**
   * Amazon type details. Should only be used when type is amazon.
   */
  amazon?: UpdateAppBodyAmazon;
  /**
   * App Store type details. Should only be used when type is app_store.
   */
  app_store?: UpdateAppBodyAppStore;
  /**
   * Legacy Mac App Store type details. Should only be used when type is mac_app_store.
   */
  mac_app_store?: UpdateAppBodyMacAppStore;
  /**
   * The name of the app
   * @minLength 1
   * @maxLength 255
   */
  name?: string;
  /**
   * Play Store type details. Should only be used when type is play_store.
   */
  play_store?: UpdateAppBodyPlayStore;
  /**
   * RevenueCat Billing type details. Should only be used when type is rc_billing.
   */
  rc_billing?: UpdateAppBodyRcBilling;
  /**
   * Roku Channel Store type details. Should only be used when type is roku.
   */
  roku?: UpdateAppBodyRoku;
  /**
   * Stripe type details. Should only be used when type is stripe.
   */
  stripe?: UpdateAppBodyStripe;
};

export type ListAppsParams = {
  starting_after?: string;
  limit?: number;
};

export type ListProjectsParams = {
  starting_after?: string;
  limit?: number;
};

export type UnprocessableEntityResponseAllOfType =
  (typeof UnprocessableEntityResponseAllOfType)[keyof typeof UnprocessableEntityResponseAllOfType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const UnprocessableEntityResponseAllOfType = {
  unprocessable_entity_error: "unprocessable_entity_error",
  parameter_error: "parameter_error",
  store_error: "store_error",
} as const;

export type UnprocessableEntityResponseAllOf = {
  type?: UnprocessableEntityResponseAllOfType;
};

export type UnprocessableEntityResponse = Error &
  UnprocessableEntityResponseAllOf;

export type UnauthorizedResponseAllOfType =
  (typeof UnauthorizedResponseAllOfType)[keyof typeof UnauthorizedResponseAllOfType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const UnauthorizedResponseAllOfType = {
  authentication_error: "authentication_error",
} as const;

export type UnauthorizedResponseAllOf = {
  type?: UnauthorizedResponseAllOfType;
};

export type UnauthorizedResponse = Error & UnauthorizedResponseAllOf;

export type RateLimitedResponseAllOfType =
  (typeof RateLimitedResponseAllOfType)[keyof typeof RateLimitedResponseAllOfType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const RateLimitedResponseAllOfType = {
  rate_limit_error: "rate_limit_error",
} as const;

export type RateLimitedResponseAllOf = {
  type?: RateLimitedResponseAllOfType;
};

export type RateLimitedResponse = Error & RateLimitedResponseAllOf;

export type NotFoundResponseAllOfType =
  (typeof NotFoundResponseAllOfType)[keyof typeof NotFoundResponseAllOfType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const NotFoundResponseAllOfType = {
  resource_missing: "resource_missing",
} as const;

export type NotFoundResponseAllOf = {
  type?: NotFoundResponseAllOfType;
};

export type NotFoundResponse = Error & NotFoundResponseAllOf;

export type LockedResponseAllOfType =
  (typeof LockedResponseAllOfType)[keyof typeof LockedResponseAllOfType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LockedResponseAllOfType = {
  resource_locked_error: "resource_locked_error",
} as const;

export type LockedResponseAllOf = {
  type?: LockedResponseAllOfType;
};

export type LockedResponse = Error & LockedResponseAllOf;

export type InternalErrorResponseAllOfType =
  (typeof InternalErrorResponseAllOfType)[keyof typeof InternalErrorResponseAllOfType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const InternalErrorResponseAllOfType = {
  server_error: "server_error",
} as const;

export type InternalErrorResponseAllOf = {
  type?: InternalErrorResponseAllOfType;
};

export type InternalErrorResponse = Error & InternalErrorResponseAllOf;

export type ForbiddenResponseAllOfType =
  (typeof ForbiddenResponseAllOfType)[keyof typeof ForbiddenResponseAllOfType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ForbiddenResponseAllOfType = {
  authorization_error: "authorization_error",
} as const;

export type ForbiddenResponseAllOf = {
  type?: ForbiddenResponseAllOfType;
};

export type ForbiddenResponse = Error & ForbiddenResponseAllOf;

export type ConflictResponseAllOfType =
  (typeof ConflictResponseAllOfType)[keyof typeof ConflictResponseAllOfType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ConflictResponseAllOfType = {
  resource_already_exists: "resource_already_exists",
  idempotency_error: "idempotency_error",
} as const;

export type ConflictResponseAllOf = {
  type?: ConflictResponseAllOfType;
};

export type ConflictResponse = Error & ConflictResponseAllOf;

export type BadRequestResponseAllOfType =
  (typeof BadRequestResponseAllOfType)[keyof typeof BadRequestResponseAllOfType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const BadRequestResponseAllOfType = {
  parameter_error: "parameter_error",
  invalid_request: "invalid_request",
} as const;

export type BadRequestResponseAllOf = {
  type?: BadRequestResponseAllOfType;
};

export type BadRequestResponse = Error & BadRequestResponseAllOf;

/**
 * @nullable
 */
export type SubscriptionProduct = {
  /**
   * The duration of the subscription in ISO-8601 standard
   * @nullable
   * @pattern ^(-?)P(?=\d|T\d)(?:(\d+)Y)?(?:(\d+)M)?(?:(\d+)([DW]))?(?:T(?:(\d+)H)?(?:(\d+)M)?(?:(\d+(?:\.\d+)?)S)?)?$
   */
  duration: string | null;
  /**
   * The duration of the subscription's grace period in ISO-8601 standard
   * @nullable
   * @pattern ^(-?)P(?=\d|T\d)(?:(\d+)Y)?(?:(\d+)M)?(?:(\d+)([DW]))?(?:T(?:(\d+)H)?(?:(\d+)M)?(?:(\d+(?:\.\d+)?)S)?)?$
   */
  grace_period_duration: string | null;
  /**
   * The duration of the subcription's trial period in ISO-8601 standard
   * @nullable
   * @pattern ^(-?)P(?=\d|T\d)(?:(\d+)Y)?(?:(\d+)M)?(?:(\d+)([DW]))?(?:T(?:(\d+)H)?(?:(\d+)M)?(?:(\d+(?:\.\d+)?)S)?)?$
   */
  trial_duration: string | null;
} | null;

/**
 * Store the subscription belongs to
 */
export type SubscriptionStore =
  (typeof SubscriptionStore)[keyof typeof SubscriptionStore];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SubscriptionStore = {
  amazon: "amazon",
  app_store: "app_store",
  mac_app_store: "mac_app_store",
  play_store: "play_store",
  promotional: "promotional",
  stripe: "stripe",
  rc_billing: "rc_billing",
} as const;

/**
 * The status of a subscription. Please note that additional states might be added in the future. To determine whether or not a subscription currently provides access to any associated entitlements, use the _gives_access_ field.<br><br>Possible values:<br>‚Ä¢ `trialing`: the subscription is in a free trial period<br>‚Ä¢ `active`: the subscription is active, in a paid period<br>‚Ä¢ `expired`: the subscription is expired and no longer active<br>‚Ä¢ `in_grace_period`: the subscription is past its regular expiry date and experienced a billing issue, but is currently still in an access-granting grace period<br>‚Ä¢ `in_billing_retry`: the subscription has experienced a billing issue. Billing is being retried, access is suspended.-paused: the subscription is currently paused and should not provide access.<br>‚Ä¢ `unknown`: the subscription is in an unknown state. Refer to the _gives_access_ field to determine whether or not to grant access.<br>‚Ä¢ `incomplete`: the subscription is in an incomplete state, maybe due to incorrect billing details or because it's scheduled to start in the future.

 */
export type SubscriptionStatus =
  (typeof SubscriptionStatus)[keyof typeof SubscriptionStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SubscriptionStatus = {
  trialing: "trialing",
  active: "active",
  expired: "expired",
  in_grace_period: "in_grace_period",
  in_billing_retry: "in_billing_retry",
  paused: "paused",
  unknown: "unknown",
  incomplete: "incomplete",
} as const;

/**
 * Indicates pending product changes. Present if the `auto_renewal_status` is `will_change_product`.
 * @nullable
 */
export type SubscriptionPendingChanges = {
  /**
   * The product that will be active as of the next renewal
   */
  product?: Product;
} | null;

/**
 * String representing the object's type. Objects of the same type share the same value.
 */
export type SubscriptionObject =
  (typeof SubscriptionObject)[keyof typeof SubscriptionObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SubscriptionObject = {
  subscription: "subscription",
} as const;

/**
 * String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
 */
export type SubscriptionEntitlementsObject =
  (typeof SubscriptionEntitlementsObject)[keyof typeof SubscriptionEntitlementsObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SubscriptionEntitlementsObject = {
  list: "list",
} as const;

export type SubscriptionEntitlements = {
  /** Details about each object. */
  items: Entitlement[];
  /**
   * URL to access the next page of the customer's entitlements. If not present / null, there is no next page
   * @nullable
   */
  next_page: string | null;
  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */
  object: SubscriptionEntitlementsObject;
  /**
   * The URL where this list can be accessed.
   * @maxLength 5000
   */
  url: string;
};

/**
 * The auto renewal status of a subscription.<br><br>Possible values:<br>‚Ä¢ `will_renew`: the subscription is currently set to automatically renew<br>‚Ä¢ `will_not_renew`: the subscription is currently set to expire at the end of the period<br>‚Ä¢ `will_change_product`: the subscription is currently set to change product at the end of the period (which might start a new subscription)<br>‚Ä¢ `will_pause`: the subscription is currently set to pause at the end of the current period<br>‚Ä¢ `requires_price_increase_consent`: the subscription will expire at the end of the current period unless the customer consents to the price increase<br>‚Ä¢ `has_already_renewed`: the customer has already been charged for the upcoming renewal (so the renewal will take place even if the customer opts out of auto-renewal before the end of the period)

 */
export type SubscriptionAutoRenewalStatus =
  (typeof SubscriptionAutoRenewalStatus)[keyof typeof SubscriptionAutoRenewalStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SubscriptionAutoRenewalStatus = {
  will_renew: "will_renew",
  will_not_renew: "will_not_renew",
  will_change_product: "will_change_product",
  will_pause: "will_pause",
  requires_price_increase_consent: "requires_price_increase_consent",
  has_already_renewed: "has_already_renewed",
} as const;

export interface Subscription {
  /**
   * The auto renewal status of a subscription.<br><br>Possible values:<br>‚Ä¢ `will_renew`: the subscription is currently set to automatically renew<br>‚Ä¢ `will_not_renew`: the subscription is currently set to expire at the end of the period<br>‚Ä¢ `will_change_product`: the subscription is currently set to change product at the end of the period (which might start a new subscription)<br>‚Ä¢ `will_pause`: the subscription is currently set to pause at the end of the current period<br>‚Ä¢ `requires_price_increase_consent`: the subscription will expire at the end of the current period unless the customer consents to the price increase<br>‚Ä¢ `has_already_renewed`: the customer has already been charged for the upcoming renewal (so the renewal will take place even if the customer opts out of auto-renewal before the end of the period)

   */
  auto_renewal_status: SubscriptionAutoRenewalStatus;
  /**
   * Billing country in ISO alpha 2 code
   * @nullable
   */
  country?: Country;
  /**
   * The date when the subscription billing period is expected to end in ms since epoch. Can be null if the subscription is paused until an indefinite date.
   * @nullable
   */
  current_period_ends_at: number | null;
  /**
   * The date when the subscription billing period started in ms since epoch
   */
  current_period_starts_at: number;
  /**
   * The ID of the customer
   * @minLength 1
   * @maxLength 1500
   */
  customer_id: string;
  entitlements: SubscriptionEntitlements;
  /**
   * The store environment
   */
  environment: Environment;
  /**
   * Determines whether the customer should currently be provided access to the entitlements associated with the subscription
   */
  gives_access: boolean;
  /**
   * The ID of the subscription (generated by RevenueCat)
   * @minLength 1
   * @maxLength 255
   */
  id: string;
  /**
   * The URL to manage the subscription
   * @nullable
   */
  management_url: string | null;
  /** String representing the object's type. Objects of the same type share the same value. */
  object: SubscriptionObject;
  /**
   * The ID of the original customer. Relevant for subscriptions that were transferred from one customer to another
   * @minLength 1
   * @maxLength 1500
   */
  original_customer_id: string;
  /**
   * Ownership of the subscription
   */
  ownership: Ownership;
  /**
   * Indicates pending product changes. Present if the `auto_renewal_status` is `will_change_product`.
   * @nullable
   */
  pending_changes?: SubscriptionPendingChanges;
  /**
   * Determines whether there is a pending payment associated with the subscription
   */
  pending_payment: boolean;
  /**
   * The ID of the offering the customer saw when purchasing the subscription
   * @minLength 1
   * @maxLength 200
   * @nullable
   */
  presented_offering_id: string | null;
  /**
   * The RevenueCat ID of the product that the customer is subscribed to. Exists for all store types except for promotional.
   * @minLength 1
   * @maxLength 255
   * @nullable
   */
  product_id: string | null;
  /**
   * The date when the subscription originally started in ms since epoch
   */
  starts_at: number;
  /**
   * The status of a subscription. Please note that additional states might be added in the future. To determine whether or not a subscription currently provides access to any associated entitlements, use the _gives_access_ field.<br><br>Possible values:<br>‚Ä¢ `trialing`: the subscription is in a free trial period<br>‚Ä¢ `active`: the subscription is active, in a paid period<br>‚Ä¢ `expired`: the subscription is expired and no longer active<br>‚Ä¢ `in_grace_period`: the subscription is past its regular expiry date and experienced a billing issue, but is currently still in an access-granting grace period<br>‚Ä¢ `in_billing_retry`: the subscription has experienced a billing issue. Billing is being retried, access is suspended.-paused: the subscription is currently paused and should not provide access.<br>‚Ä¢ `unknown`: the subscription is in an unknown state. Refer to the _gives_access_ field to determine whether or not to grant access.<br>‚Ä¢ `incomplete`: the subscription is in an incomplete state, maybe due to incorrect billing details or because it's scheduled to start in the future.

   */
  status: SubscriptionStatus;
  /**
   * Store the subscription belongs to
   */
  store: SubscriptionStore;
  /**
   * The subscription identifier as per the store (e.g, for Apple App Store, the `transaction_id` of the latest transaction of the subscription, or for Google Play Store, the Order ID of the last renewal of the subscription)
   * @minLength 1
   * @maxLength 255
   */
  store_subscription_identifier: string;
  /**
   * Total revenue generated by a subscription in USD
   */
  total_revenue_in_usd: MonetaryAmount;
}

/**
 * Stripe type details. Should only be used when type is stripe.
 */
export type StripeAppCreateStripe = {
  /**
   * It needs to be connected to your RevenueCat account. It can be omitted if you only have a single Stripe account connected to your RevenueCat account.
   * @minLength 1
   * @maxLength 256
   * @nullable
   */
  stripe_account_id?: string | null;
};

export interface StripeAppCreate {
  /**
   * Stripe type details. Should only be used when type is stripe.
   */
  stripe?: StripeAppCreateStripe;
}

/**
 * Stripe type details
 */
export type StripeAppStripe = {
  /**
   * Stripe account connected to your RevenueCat account.
   * @minLength 1
   * @maxLength 256
   * @nullable
   */
  stripe_account_id?: string | null;
};

export interface StripeApp {
  /**
   * Stripe type details
   */
  stripe?: StripeAppStripe;
}

/**
 * Roku Channel Store details. Should only be used when type is roku.
 * @nullable
 */
export type RokuAppCreateRoku = {
  /**
   * Roku Pay API key provided on the Roku Pay Web Services page.
   * @minLength 33
   * @maxLength 33
   * @nullable
   */
  roku_api_key?: string | null;
  /**
   * Channel ID provided on the Roku Channel page.
   * @minLength 6
   * @maxLength 6
   * @nullable
   */
  roku_channel_id?: string | null;
  /**
   * Channel name that is displayed on the Roku Channel page.
   * @minLength 1
   * @maxLength 30
   * @nullable
   */
  roku_channel_name?: string | null;
} | null;

export interface RokuAppCreate {
  /**
   * Roku Channel Store details. Should only be used when type is roku.
   * @nullable
   */
  roku?: RokuAppCreateRoku;
}

/**
 * Roku Channel Store type details
 */
export type RokuAppRoku = {
  /**
   * Channel ID provided on the Roku Channel page.
   * @minLength 6
   * @maxLength 6
   * @nullable
   */
  roku_channel_id?: string | null;
  /**
   * Channel name that is displayed on the Roku Channel page.
   * @minLength 1
   * @maxLength 30
   * @nullable
   */
  roku_channel_name?: string | null;
};

export interface RokuApp {
  /**
   * Roku Channel Store type details
   */
  roku?: RokuAppRoku;
}

/**
 * ISO 4217 currency code
 */
export type RCBillingCurrency =
  (typeof RCBillingCurrency)[keyof typeof RCBillingCurrency];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const RCBillingCurrency = {
  AUD: "AUD",
  CAD: "CAD",
  EUR: "EUR",
  GBP: "GBP",
  JPY: "JPY",
  USD: "USD",
} as const;

/**
 * Revenue Cat Billing Store type details
 * @nullable
 */
export type RCBillingAppCreateRcBilling = {
  default_currency?: RCBillingCurrency;
  /**
   * The company name.
   * @minLength 1
   * @maxLength 256
   */
  seller_company_name: string;
  /**
   * The company support email.
   * @minLength 1
   * @maxLength 320
   * @nullable
   */
  seller_company_support_email?: string | null;
  /**
   * It needs to be connected to your RevenueCat account. It can be omitted if you only have a single Stripe account connected to your RevenueCat account.
   * @minLength 1
   * @maxLength 256
   * @nullable
   */
  stripe_account_id?: string | null;
} | null;

export interface RCBillingAppCreate {
  /**
   * Revenue Cat Billing Store type details
   * @nullable
   */
  rc_billing?: RCBillingAppCreateRcBilling;
}

/**
 * Revenue Cat Billing Store type details
 */
export type RCBillingAppRcBilling = {
  /** The default currency to be used for the app. */
  default_currency: RCBillingCurrency;
  /**
   * The company name.
   * @minLength 1
   * @maxLength 256
   */
  seller_company_name: string;
  /**
   * The company support email.
   * @minLength 1
   * @maxLength 320
   * @nullable
   */
  seller_company_support_email?: string | null;
  /**
   * Stripe account connected to your RevenueCat account.
   * @minLength 1
   * @maxLength 256
   * @nullable
   */
  stripe_account_id?: string | null;
};

export interface RCBillingApp {
  /**
   * Revenue Cat Billing Store type details
   */
  rc_billing?: RCBillingAppRcBilling;
}

/**
 * Store the purchase belongs to
 */
export type PurchaseStore = (typeof PurchaseStore)[keyof typeof PurchaseStore];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PurchaseStore = {
  amazon: "amazon",
  app_store: "app_store",
  mac_app_store: "mac_app_store",
  play_store: "play_store",
  promotional: "promotional",
  stripe: "stripe",
  rc_billing: "rc_billing",
} as const;

/**
 * The status of a purchase
 */
export type PurchaseStatus =
  (typeof PurchaseStatus)[keyof typeof PurchaseStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PurchaseStatus = {
  owned: "owned",
  refunded: "refunded",
} as const;

/**
 * String representing the object's type. Objects of the same type share the same value.
 */
export type PurchaseObject =
  (typeof PurchaseObject)[keyof typeof PurchaseObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PurchaseObject = {
  purchase: "purchase",
} as const;

/**
 * String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
 */
export type PurchaseEntitlementsObject =
  (typeof PurchaseEntitlementsObject)[keyof typeof PurchaseEntitlementsObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PurchaseEntitlementsObject = {
  list: "list",
} as const;

export type PurchaseEntitlements = {
  /** Details about each object. */
  items: Entitlement[];
  /**
   * URL to access the next page of the customer's entitlements. If not present / null, there is no next page
   * @nullable
   */
  next_page: string | null;
  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */
  object: PurchaseEntitlementsObject;
  /**
   * The URL where this list can be accessed.
   * @maxLength 5000
   */
  url: string;
};

/**
 * String representing the object's type. Objects of the same type share the same value.
 */
export type ProjectObject = (typeof ProjectObject)[keyof typeof ProjectObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ProjectObject = {
  project: "project",
} as const;

export interface Project {
  /**
   * The date when the project was created in ms since epoch
   */
  created_at: number;
  /**
   * The id of the project
   * @minLength 1
   * @maxLength 255
   */
  id: string;
  /**
   * The name of the project
   * @minLength 1
   * @maxLength 256
   */
  name: string;
  /** String representing the object's type. Objects of the same type share the same value. */
  object: ProjectObject;
}

/**
 * String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
 */
export type ProductsFromPackageObject =
  (typeof ProductsFromPackageObject)[keyof typeof ProductsFromPackageObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ProductsFromPackageObject = {
  list: "list",
} as const;

/**
 * String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
 */
export type ProductsFromEntitlementObject =
  (typeof ProductsFromEntitlementObject)[keyof typeof ProductsFromEntitlementObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ProductsFromEntitlementObject = {
  list: "list",
} as const;

export interface ProductsFromEntitlement {
  /** Details about each object. */
  items: Product[];
  /**
   * URL to access the next page of the entitlement's products. If not present / null, there is no next page
   * @nullable
   */
  next_page: string | null;
  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */
  object: ProductsFromEntitlementObject;
  /**
   * The URL where this list can be accessed.
   * @maxLength 5000
   */
  url: string;
}

/**
 */
export type ProductType = (typeof ProductType)[keyof typeof ProductType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ProductType = {
  subscription: "subscription",
  one_time: "one_time",
} as const;

/**
 * String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
 */
export type ProductObject = (typeof ProductObject)[keyof typeof ProductObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ProductObject = {
  product: "product",
} as const;

export interface Product {
  /**
   * The app associated with the product
   * @nullable
   */
  app?: App;
  /**
   * The id of the app
   * @minLength 1
   * @maxLength 255
   */
  app_id: string;
  /**
   * The date when the product was created in ms since epoch
   */
  created_at: number;
  /**
   * The display name of the product
   * @minLength 1
   * @maxLength 1500
   * @nullable
   */
  display_name: string | null;
  /**
   * The id of the product
   * @minLength 1
   * @maxLength 255
   */
  id: string;
  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */
  object: ProductObject;
  /**
   * The one time product object
   * @nullable
   */
  one_time?: OneTimeProduct;
  /**
   * The store product identifier
   * @minLength 1
   * @maxLength 255
   */
  store_identifier: string;
  /**
   * The subscription product object
   * @nullable
   */
  subscription?: SubscriptionProduct;
  /**
   * The product type
   */
  type: ProductType;
}

/**
 * Play Store type details. Should only be used when type is play_store.
 */
export type PlayStoreAppCreatePlayStore = {
  /**
   * The package name of the app
   * @minLength 1
   * @maxLength 256
   */
  package_name: string;
};

export interface PlayStoreAppCreate {
  /**
   * Play Store type details. Should only be used when type is play_store.
   */
  play_store?: PlayStoreAppCreatePlayStore;
}

/**
 * Play Store type details
 */
export type PlayStoreAppPlayStore = {
  /**
   * The package name of the app
   * @minLength 1
   * @maxLength 256
   */
  package_name: string;
};

export interface PlayStoreApp {
  /**
   * Play Store type details
   */
  play_store?: PlayStoreAppPlayStore;
}

export interface PackageProductIDAssociation {
  /** */
  eligibility_criteria: EligibilityCriteria;
  /**
   * @minLength 1
   * @maxLength 255
   */
  product_id: string;
}

export interface PackageProductAssociation {
  /** */
  eligibility_criteria: EligibilityCriteria;
  /** */
  product: Product;
}

export interface ProductsFromPackage {
  /** Details about each object. */
  items: PackageProductAssociation[];
  /**
   * URL to access the next page of the entitlement's products. If not present / null, there is no next page
   * @nullable
   */
  next_page: string | null;
  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */
  object: ProductsFromPackageObject;
  /**
   * The URL where this list can be accessed.
   * @maxLength 5000
   */
  url: string;
}

/**
 * String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
 */
export type PackageProductsObject =
  (typeof PackageProductsObject)[keyof typeof PackageProductsObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PackageProductsObject = {
  list: "list",
} as const;

/**
 * @nullable
 */
export type PackageProducts = {
  /** Product association */
  items: PackageProductAssociation[];
  /**
   * URL to access the next page of the project's products. If not present / null, there is no next page
   * @nullable
   */
  next_page: string | null;
  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */
  object: PackageProductsObject;
  /**
   * The URL where this list can be accessed.
   * @maxLength 5000
   */
  url: string;
} | null;

/**
 * String representing the object's type. Objects of the same type share the same value.
 */
export type PackageObject = (typeof PackageObject)[keyof typeof PackageObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PackageObject = {
  package: "package",
} as const;

export interface Package {
  /**
   * The date the package was created at in ms since epoch
   */
  created_at: number;
  /**
   * The display name of the package
   * @minLength 1
   * @maxLength 1500
   */
  display_name: string;
  /**
   * The id of the package
   * @minLength 1
   * @maxLength 255
   */
  id: string;
  /**
   * The lookup_key of the package
   * @minLength 1
   * @maxLength 200
   */
  lookup_key: string;
  /** String representing the object's type. Objects of the same type share the same value. */
  object: PackageObject;
  /**
   * The position of the package within the offering
   * @nullable
   */
  position: number | null;
  /** @nullable */
  products?: PackageProducts;
}

export type Ownership = (typeof Ownership)[keyof typeof Ownership];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const Ownership = {
  purchased: "purchased",
  family_shared: "family_shared",
} as const;

/**
 * String representing the object's type. Objects of the same type share the same value.
 */
export type OverviewMetricsObject =
  (typeof OverviewMetricsObject)[keyof typeof OverviewMetricsObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OverviewMetricsObject = {
  overview_metrics: "overview_metrics",
} as const;

/**
 * Length of time during which metric data is collected in ISO 8601 format. Zero period means metric data was collected now
 */
export type OverviewMetricPeriod =
  (typeof OverviewMetricPeriod)[keyof typeof OverviewMetricPeriod];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OverviewMetricPeriod = {
  P0D: "P0D",
  P28D: "P28D",
} as const;

/**
 * String representing the object's type. Objects of the same type share the same value.
 */
export type OverviewMetricObject =
  (typeof OverviewMetricObject)[keyof typeof OverviewMetricObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OverviewMetricObject = {
  overview_metric: "overview_metric",
} as const;

export interface OverviewMetric {
  /**
   * Description of the overview metric
   */
  description: string;
  /**
   * Id of the overview metric
   * @minLength 1
   * @maxLength 255
   */
  id: string;
  /**
   * Last time the overview metric was updated in ms since epoch
   * @nullable
   */
  last_updated_at: number | null;
  /**
   * Last time the overview metric was updated datetime in ISO 8601 format
   * @nullable
   */
  last_updated_at_iso8601: string | null;
  /**
   * Display name of the overview metric
   */
  name: string;
  /** String representing the object's type. Objects of the same type share the same value. */
  object: OverviewMetricObject;
  /**
   * Length of time during which metric data is collected in ISO 8601 format. Zero period means metric data was collected now
   */
  period: OverviewMetricPeriod;
  /**
   * Unit of the overview metric
   */
  unit: string;
  /**
   * Value of the overview metric
   */
  value: number;
}

export interface OverviewMetrics {
  /** Details about each overview metric. */
  metrics: OverviewMetric[];
  /** String representing the object's type. Objects of the same type share the same value. */
  object: OverviewMetricsObject;
}

/**
 * @nullable
 */
export type OneTimeProduct = {
  /**
   * Indicates whether the product is consumable or not.
   * @nullable
   */
  is_consumable: boolean | null;
} | null;

/**
 * Custom metadata of the offering
 * @nullable
 */
export type OfferingMetadata = { [key: string]: unknown } | null;

/**
 * String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
 */
export type OfferingPackagesObject =
  (typeof OfferingPackagesObject)[keyof typeof OfferingPackagesObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OfferingPackagesObject = {
  list: "list",
} as const;

/**
 * @nullable
 */
export type OfferingPackages = {
  /** Details about each object. */
  items: Package[];
  /**
   * URL to access the next page of the Offering's packages. If not present / null, there is no next page
   * @nullable
   */
  next_page: string | null;
  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */
  object: OfferingPackagesObject;
  /**
   * The URL where this list can be accessed.
   * @maxLength 5000
   */
  url: string;
} | null;

/**
 * String representing the object's type. Objects of the same type share the same value.
 */
export type OfferingObject =
  (typeof OfferingObject)[keyof typeof OfferingObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OfferingObject = {
  offering: "offering",
} as const;

export interface Offering {
  /**
   * The date the offering was created at in ms since epoch
   */
  created_at: number;
  /**
   * The display name of the offering
   * @minLength 1
   * @maxLength 1500
   */
  display_name: string;
  /**
   * The id of the offering
   * @minLength 1
   * @maxLength 255
   */
  id: string;
  /**
   * Indicates if the offering is the current offering
   */
  is_current: boolean;
  /**
   * A custom identifier of the entitlement
   * @minLength 1
   * @maxLength 200
   */
  lookup_key: string;
  /**
   * Custom metadata of the offering
   * @nullable
   */
  metadata?: OfferingMetadata;
  /** String representing the object's type. Objects of the same type share the same value. */
  object: OfferingObject;
  /** @nullable */
  packages?: OfferingPackages;
  /**
   * ID of the project to which the offering belongs
   * @minLength 1
   * @maxLength 20
   */
  project_id: string;
}

export interface MonetaryAmount {
  /**
   * Store commission or payment processor fees deducted from gross revenue (if any)
   */
  commission?: number;
  currency: Currency;
  /**
   * Total revenue generated (excluding taxes and commission)
   */
  gross: number;
  /**
   * Net revenue after store commission / fees and taxes
   */
  proceeds: number;
  /**
   * Estimated taxes deducted from gross revenue
   */
  tax: number;
}

export interface Purchase {
  /**
   * Billing country in ISO alpha 2 code
   * @nullable
   */
  country?: Country;
  /**
   * The id of the customer
   * @minLength 1
   * @maxLength 1500
   */
  customer_id: string;
  entitlements: PurchaseEntitlements;
  environment: Environment;
  /**
   * The id of the purchase
   * @minLength 1
   * @maxLength 255
   */
  id: string;
  /** String representing the object's type. Objects of the same type share the same value. */
  object: PurchaseObject;
  /**
   * The ID of the original customer
   * @minLength 1
   * @maxLength 1500
   */
  original_customer_id: string;
  /**
   * Ownership of the purchase
   */
  ownership: Ownership;
  /**
   * The ID of the offering the customer saw when they did the purchase
   * @minLength 1
   * @maxLength 200
   * @nullable
   */
  presented_offering_id: string | null;
  /**
   * The ID of the product that was purchased
   * @minLength 1
   * @maxLength 255
   */
  product_id: string;
  /**
   * The date when the purchase was made in ms since epoch
   */
  purchased_at: number;
  /** The quantity of the product purchased in one transaction */
  quantity: number;
  /**
   * The revenue generated by the purchase in USD
   */
  revenue_in_usd: MonetaryAmount;
  /**
   * The status of a purchase
   */
  status: PurchaseStatus;
  /**
   * Store the purchase belongs to
   */
  store: PurchaseStore;
  /**
   * The store purchase identifier
   * @minLength 1
   * @maxLength 255
   */
  store_purchase_identifier: string;
}

/**
 * Mac App Store type details. Should only be used when type is mac_app_store.
 */
export type MacAppStoreAppCreateMacAppStore = {
  /**
   * The bundle ID of the app
   * @minLength 1
   * @maxLength 256
   */
  bundle_id: string;
  /**
   * The shared secret of the app
   * @minLength 32
   * @maxLength 32
   */
  shared_secret?: string;
};

export interface MacAppStoreAppCreate {
  /**
   * Mac App Store type details. Should only be used when type is mac_app_store.
   */
  mac_app_store?: MacAppStoreAppCreateMacAppStore;
}

/**
 * Legacy Mac App Store type details
 */
export type MacAppStoreAppMacAppStore = {
  /**
   * The bundle ID of the app
   * @minLength 1
   * @maxLength 256
   */
  bundle_id: string;
};

export interface MacAppStoreApp {
  /**
   * Legacy Mac App Store type details
   */
  mac_app_store?: MacAppStoreAppMacAppStore;
}

/**
 * String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
 */
export type ListSubscriptionsObject =
  (typeof ListSubscriptionsObject)[keyof typeof ListSubscriptionsObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ListSubscriptionsObject = {
  list: "list",
} as const;

export interface ListSubscriptions {
  /** Details about each object. */
  items: Subscription[];
  /**
   * URL to access the next page of the customer's subscriptions. If not present / null, there is no next page
   * @nullable
   */
  next_page: string | null;
  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */
  object: ListSubscriptionsObject;
  /**
   * The URL where this list can be accessed.
   * @maxLength 5000
   */
  url: string;
}

/**
 * String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
 */
export type ListPurchasesObject =
  (typeof ListPurchasesObject)[keyof typeof ListPurchasesObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ListPurchasesObject = {
  list: "list",
} as const;

export interface ListPurchases {
  /** Details about each object. */
  items: Purchase[];
  /**
   * URL to access the next page of the customer's purchases. If not present / null, there is no next page
   * @nullable
   */
  next_page: string | null;
  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */
  object: ListPurchasesObject;
  /**
   * The URL where this list can be accessed.
   * @maxLength 5000
   */
  url: string;
}

/**
 * String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
 */
export type ListProjectsObject =
  (typeof ListProjectsObject)[keyof typeof ListProjectsObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ListProjectsObject = {
  list: "list",
} as const;

export interface ListProjects {
  /** Details about each object. */
  items: Project[];
  /**
   * URL to access the next page of the projects. If not present / null, there is no next page
   * @nullable
   */
  next_page: string | null;
  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */
  object: ListProjectsObject;
  /**
   * The URL where this list can be accessed.
   * @maxLength 5000
   */
  url: string;
}

/**
 * String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
 */
export type ListProductsObject =
  (typeof ListProductsObject)[keyof typeof ListProductsObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ListProductsObject = {
  list: "list",
} as const;

export interface ListProducts {
  /** Details about each object. */
  items: Product[];
  /**
   * URL to access the next page of the project's products. If not present / null, there is no next page
   * @nullable
   */
  next_page: string | null;
  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */
  object: ListProductsObject;
  /**
   * The URL where this list can be accessed.
   * @maxLength 5000
   */
  url: string;
}

/**
 * String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
 */
export type ListPackagesObject =
  (typeof ListPackagesObject)[keyof typeof ListPackagesObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ListPackagesObject = {
  list: "list",
} as const;

export interface ListPackages {
  /** Details about each object. */
  items: Package[];
  /**
   * URL to access the next page of the project's packages. If not present / null, there is no next page
   * @nullable
   */
  next_page: string | null;
  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */
  object: ListPackagesObject;
  /**
   * The URL where this list can be accessed.
   * @maxLength 5000
   */
  url: string;
}

/**
 * String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
 */
export type ListOfferingsObject =
  (typeof ListOfferingsObject)[keyof typeof ListOfferingsObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ListOfferingsObject = {
  list: "list",
} as const;

export interface ListOfferings {
  /** Details about each object. */
  items: Offering[];
  /**
   * URL to access the next page of the project's offerings. If not present / null, there is no next page
   * @nullable
   */
  next_page: string | null;
  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */
  object: ListOfferingsObject;
  /**
   * The URL where this list can be accessed.
   * @maxLength 5000
   */
  url: string;
}

/**
 * String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
 */
export type ListEntitlementsObject =
  (typeof ListEntitlementsObject)[keyof typeof ListEntitlementsObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ListEntitlementsObject = {
  list: "list",
} as const;

export interface ListEntitlements {
  /** Details about each object. */
  items: Entitlement[];
  /**
   * URL to access the next page of the project's entitlements. If not present / null, there is no next page
   * @nullable
   */
  next_page: string | null;
  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */
  object: ListEntitlementsObject;
  /**
   * The URL where this list can be accessed.
   * @maxLength 5000
   */
  url: string;
}

/**
 * String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
 */
export type ListCustomersObject =
  (typeof ListCustomersObject)[keyof typeof ListCustomersObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ListCustomersObject = {
  list: "list",
} as const;

export interface ListCustomers {
  /** Details about each object. */
  items: Customer[];
  /**
   * URL to access the next page of the project's customers. If not present / null, there is no next page
   * @nullable
   */
  next_page: string | null;
  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */
  object: ListCustomersObject;
  /**
   * The URL where this list can be accessed.
   * @maxLength 5000
   */
  url: string;
}

/**
 * String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
 */
export type ListCustomerInvoicesObject =
  (typeof ListCustomerInvoicesObject)[keyof typeof ListCustomerInvoicesObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ListCustomerInvoicesObject = {
  list: "list",
} as const;

export interface ListCustomerInvoices {
  /** Details about each object. */
  items: Invoice[];
  /**
   * URL to access the next page of the customer's invoice. If not present / null, there is no next page
   * @nullable
   */
  next_page: string | null;
  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */
  object: ListCustomerInvoicesObject;
  /**
   * The URL where this list can be accessed.
   * @maxLength 5000
   */
  url: string;
}

/**
 * String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
 */
export type ListCustomerAliasesObject =
  (typeof ListCustomerAliasesObject)[keyof typeof ListCustomerAliasesObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ListCustomerAliasesObject = {
  list: "list",
} as const;

export interface ListCustomerAliases {
  /** Details about each object. */
  items: CustomerAlias[];
  /**
   * URL to access the next page of the customer's aliases. If not present / null, there is no next page
   * @nullable
   */
  next_page: string | null;
  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */
  object: ListCustomerAliasesObject;
  /**
   * The URL where this list can be accessed.
   * @maxLength 5000
   */
  url: string;
}

/**
 * String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
 */
export type ListCustomerActiveEntitlementsObject =
  (typeof ListCustomerActiveEntitlementsObject)[keyof typeof ListCustomerActiveEntitlementsObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ListCustomerActiveEntitlementsObject = {
  list: "list",
} as const;

export interface ListCustomerActiveEntitlements {
  /** Details about each object. */
  items: CustomerEntitlement[];
  /**
   * URL to access the next page of the customer's active entitlements. If not present / null, there is no next page
   * @nullable
   */
  next_page: string | null;
  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */
  object: ListCustomerActiveEntitlementsObject;
  /**
   * The URL where this list can be accessed.
   * @maxLength 5000
   */
  url: string;
}

/**
 * String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
 */
export type ListAppsObject =
  (typeof ListAppsObject)[keyof typeof ListAppsObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ListAppsObject = {
  list: "list",
} as const;

export interface ListApps {
  /** Details about each object. */
  items: App[];
  /**
   * URL to access the next page of the project's apps. If not present / null, there is no next page
   * @nullable
   */
  next_page: string | null;
  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */
  object: ListAppsObject;
  /**
   * The URL where this list can be accessed.
   * @maxLength 5000
   */
  url: string;
}

/**
 * String representing the object's type. Objects of the same type share the same value.
 */
export type InvoiceLineItemObject =
  (typeof InvoiceLineItemObject)[keyof typeof InvoiceLineItemObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const InvoiceLineItemObject = {
  invoiceline_item: "invoice.line_item",
} as const;

export interface InvoiceLineItem {
  /** String representing the object's type. Objects of the same type share the same value. */
  object: InvoiceLineItemObject;
  /**
   * The display name of the product
   * @minLength 1
   * @maxLength 1500
   * @nullable
   */
  product_display_name: string | null;
  /**
   * The duration of the subscription in ISO-8601 standard
   * @nullable
   * @pattern ^(-?)P(?=\d|T\d)(?:(\d+)Y)?(?:(\d+)M)?(?:(\d+)([DW]))?(?:T(?:(\d+)H)?(?:(\d+)M)?(?:(\d+(?:\.\d+)?)S)?)?$
   */
  product_duration: string | null;
  /**
   * The product identifier
   * @minLength 1
   * @maxLength 255
   */
  product_identifier: string;
  /**
   * Total purchased items
   */
  quantity: number;
  unit_amount: MonetaryAmount;
}

/**
 * String representing the object's type. Objects of the same type share the same value.
 */
export type InvoiceObject = (typeof InvoiceObject)[keyof typeof InvoiceObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const InvoiceObject = {
  invoice: "invoice",
} as const;

export interface Invoice {
  /**
   * The id of the invoice
   * @minLength 1
   * @maxLength 255
   */
  id: string;
  /**
   * URL to download the invoice pdf
   * @nullable
   */
  invoice_url: string | null;
  /**
   * The date when the invoiced was issued in ms since epoch
   */
  issued_at: number;
  /**
   * List of line items that are part of the invoice. Each line item represents a product that was purchased.
   */
  line_items: InvoiceLineItem[];
  /** String representing the object's type. Objects of the same type share the same value. */
  object: InvoiceObject;
  /**
   * The date when the invoiced was paid in ms since epoch
   * @nullable
   */
  paid_at: number | null;
  total_amount: MonetaryAmount;
}

/**
 * String representing the object's type. Objects of the same type share the same value.
 */
export type ExperimentEnrollmentObject =
  (typeof ExperimentEnrollmentObject)[keyof typeof ExperimentEnrollmentObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ExperimentEnrollmentObject = {
  experiment_enrollment: "experiment_enrollment",
} as const;

/**
 * @nullable
 */
export type ExperimentEnrollment = {
  /** @maxLength 1500 */
  id: string;
  /** String representing the object's type. Objects of the same type share the same value. */
  object: ExperimentEnrollmentObject;
  /**
   * The variant of the Experiment that the Customer was or is assigned to, where 'a' represents the Control, and 'b' represents the Treatment.
   * @minLength 1
   * @maxLength 1
   */
  variant: string;
} | null;

/**
 * The error type
 */
export type ErrorType = (typeof ErrorType)[keyof typeof ErrorType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ErrorType = {
  parameter_error: "parameter_error",
  resource_already_exists: "resource_already_exists",
  resource_missing: "resource_missing",
  idempotency_error: "idempotency_error",
  rate_limit_error: "rate_limit_error",
  authentication_error: "authentication_error",
  authorization_error: "authorization_error",
  store_error: "store_error",
  server_error: "server_error",
  resource_locked_error: "resource_locked_error",
  unprocessable_entity_error: "unprocessable_entity_error",
  invalid_request: "invalid_request",
} as const;

/**
 * String representing the object's type. Objects of the same type share the same value.
 */
export type ErrorObject = (typeof ErrorObject)[keyof typeof ErrorObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ErrorObject = {
  error: "error",
} as const;

export interface Error {
  /**
   * The ms the client should wait before retrying the request. Only present for retryable errors.
   * @nullable
   */
  backoff_ms?: number | null;
  /**
   * A URL to more information about the error reported
   */
  doc_url?: string;
  /**
   * A message describing the reason of the error
   */
  message: string;
  /** String representing the object's type. Objects of the same type share the same value. */
  object: ErrorObject;
  /**
   * If the error is parameter-specific, the parameter related to the error
   * @nullable
   */
  param?: string | null;
  /**
   * Indicates if the error is retryable or not
   */
  retryable: boolean;
  /**
   * The error type
   */
  type: ErrorType;
}

/**
 * The store environment
 */
export type Environment = (typeof Environment)[keyof typeof Environment];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const Environment = {
  production: "production",
  sandbox: "sandbox",
} as const;

/**
 * String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
 */
export type EntitlementProductsObject =
  (typeof EntitlementProductsObject)[keyof typeof EntitlementProductsObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EntitlementProductsObject = {
  list: "list",
} as const;

/**
 * List of products attached to the entitlement
 * @nullable
 */
export type EntitlementProducts = {
  /** Details about each object. */
  items: Product[];
  /**
   * URL to access the next page of the Entitlement's products. If not present / null, there is no next page
   * @nullable
   */
  next_page: string | null;
  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */
  object: EntitlementProductsObject;
  /**
   * The URL where this list can be accessed.
   * @maxLength 5000
   */
  url: string;
} | null;

/**
 * String representing the object's type. Objects of the same type share the same value.
 */
export type EntitlementObject =
  (typeof EntitlementObject)[keyof typeof EntitlementObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EntitlementObject = {
  entitlement: "entitlement",
} as const;

export interface Entitlement {
  /**
   * The date when the entitlement was created in ms since epoch
   */
  created_at: number;
  /**
   * The display name of the entitlement
   * @minLength 1
   * @maxLength 1500
   */
  display_name: string;
  /**
   * The id of the entitlement
   * @minLength 1
   * @maxLength 255
   */
  id: string;
  /**
   * A custom identifier of the entitlement
   * @minLength 1
   * @maxLength 200
   */
  lookup_key: string;
  /** String representing the object's type. Objects of the same type share the same value. */
  object: EntitlementObject;
  /**
   * List of products attached to the entitlement
   * @nullable
   */
  products?: EntitlementProducts;
  /**
   * ID of the project to which the entitlement belongs
   * @minLength 1
   * @maxLength 20
   */
  project_id: string;
}

/**
 */
export type EligibilityCriteria =
  (typeof EligibilityCriteria)[keyof typeof EligibilityCriteria];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EligibilityCriteria = {
  all: "all",
  google_sdk_lt_6: "google_sdk_lt_6",
  google_sdk_ge_6: "google_sdk_ge_6",
} as const;

/**
 * The type of the deleted object
 */
export type DeletedObjectObject =
  (typeof DeletedObjectObject)[keyof typeof DeletedObjectObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DeletedObjectObject = {
  app: "app",
  customer: "customer",
  entitlement: "entitlement",
  offering: "offering",
  package: "package",
  product: "product",
} as const;

export interface DeletedObject {
  /**
   * The date when the object was deleted in ms since epoch
   */
  deleted_at: number;
  /**
   * The ID of the deleted object
   */
  id: string;
  /** The type of the deleted object */
  object: DeletedObjectObject;
}

/**
 * String representing the object's type. Objects of the same type share the same value.
 */
export type CustomerEntitlementObject =
  (typeof CustomerEntitlementObject)[keyof typeof CustomerEntitlementObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CustomerEntitlementObject = {
  customeractive_entitlement: "customer.active_entitlement",
} as const;

export interface CustomerEntitlement {
  /**
   * ID of the entitlement granted to the customer
   * @minLength 1
   * @maxLength 255
   */
  entitlement_id: string;
  /**
   * The date after which the access to the entitlement expires in ms since epoch
   * @nullable
   */
  expires_at: number | null;
  /** String representing the object's type. Objects of the same type share the same value. */
  object: CustomerEntitlementObject;
}

export type CustomerAttributeReservedName =
  (typeof CustomerAttributeReservedName)[keyof typeof CustomerAttributeReservedName];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CustomerAttributeReservedName = {
  $ad: "$ad",
  $adGroup: "$adGroup",
  $adjustId: "$adjustId",
  $airshipChannelId: "$airshipChannelId",
  $amazonAdId: "$amazonAdId",
  $amplitudeDeviceId: "$amplitudeDeviceId",
  $amplitudeUserId: "$amplitudeUserId",
  $apnsTokens: "$apnsTokens",
  $appsflyerId: "$appsflyerId",
  $appsflyerSharingFilter: "$appsflyerSharingFilter",
  $attConsentStatus: "$attConsentStatus",
  $branchId: "$branchId",
  $brazeAliasLabel: "$brazeAliasLabel",
  $brazeAliasName: "$brazeAliasName",
  $campaign: "$campaign",
  $clevertapId: "$clevertapId",
  $creative: "$creative",
  $displayName: "$displayName",
  $email: "$email",
  $fbAnonId: "$fbAnonId",
  $fcmTokens: "$fcmTokens",
  $firebaseAppInstanceId: "$firebaseAppInstanceId",
  $gpsAdId: "$gpsAdId",
  $idfa: "$idfa",
  $idfv: "$idfv",
  $ip: "$ip",
  $iterableCampaignId: "$iterableCampaignId",
  $iterableTemplateId: "$iterableTemplateId",
  $iterableUserId: "$iterableUserId",
  $keyword: "$keyword",
  $kochavaDeviceId: "$kochavaDeviceId",
  $mediaSource: "$mediaSource",
  $mixpanelDistinctId: "$mixpanelDistinctId",
  $mparticleId: "$mparticleId",
  $onesignalId: "$onesignalId",
  $onesignalUserId: "$onesignalUserId",
  $phoneNumber: "$phoneNumber",
  $posthogUserId: "$posthogUserId",
  $segmentId: "$segmentId",
  $tenjinId: "$tenjinId",
  $deviceVersion: "$deviceVersion",
} as const;

/**
 * @maxLength 40
 * @pattern ^[a-zA-Z][a-zA-Z0-9_-]*$
 */
export type CustomerAttributeCustomName = string;

/**
 * String representing the object's type. Objects of the same type share the same value.
 */
export type CustomerAliasObject =
  (typeof CustomerAliasObject)[keyof typeof CustomerAliasObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CustomerAliasObject = {
  customeralias: "customer.alias",
} as const;

export interface CustomerAlias {
  /**
   * The time when the alias was created
   */
  created_at: number;
  /** @maxLength 1500 */
  id: string;
  /** String representing the object's type. Objects of the same type share the same value. */
  object: CustomerAliasObject;
}

/**
 * String representing the object's type. Objects of the same type share the same value.
 */
export type CustomerObject =
  (typeof CustomerObject)[keyof typeof CustomerObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CustomerObject = {
  customer: "customer",
} as const;

export interface Customer {
  active_entitlements?: ListCustomerActiveEntitlements;
  /**
   * The experiment enrollment object
   * @nullable
   */
  experiment?: ExperimentEnrollment;
  /**
   * The first time the customer was seen
   */
  first_seen_at: number;
  /** @maxLength 1500 */
  id: string;
  /**
   * The last time the customer was seen
   * @nullable
   */
  last_seen_at: number | null;
  /** String representing the object's type. Objects of the same type share the same value. */
  object: CustomerObject;
  /**
   * ID of the project to which the customer belongs
   * @minLength 1
   * @maxLength 20
   */
  project_id: string;
}

/**
 * ISO 4217 currency code
 */
export type Currency = (typeof Currency)[keyof typeof Currency];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const Currency = {
  AED: "AED",
  AFN: "AFN",
  ALL: "ALL",
  AMD: "AMD",
  ANG: "ANG",
  AOA: "AOA",
  ARS: "ARS",
  AUD: "AUD",
  AWG: "AWG",
  AZN: "AZN",
  BAM: "BAM",
  BBD: "BBD",
  BDT: "BDT",
  BGN: "BGN",
  BHD: "BHD",
  BIF: "BIF",
  BMD: "BMD",
  BND: "BND",
  BOB: "BOB",
  BRL: "BRL",
  BSD: "BSD",
  BTC: "BTC",
  BTN: "BTN",
  BWP: "BWP",
  BYN: "BYN",
  BZD: "BZD",
  CAD: "CAD",
  CDF: "CDF",
  CHF: "CHF",
  CLF: "CLF",
  CLP: "CLP",
  CNH: "CNH",
  CNY: "CNY",
  COP: "COP",
  CRC: "CRC",
  CUC: "CUC",
  CUP: "CUP",
  CVE: "CVE",
  CZK: "CZK",
  DJF: "DJF",
  DKK: "DKK",
  DOP: "DOP",
  DZD: "DZD",
  EGP: "EGP",
  ERN: "ERN",
  ETB: "ETB",
  EUR: "EUR",
  FJD: "FJD",
  FKP: "FKP",
  GBP: "GBP",
  GEL: "GEL",
  GGP: "GGP",
  GHS: "GHS",
  GIP: "GIP",
  GMD: "GMD",
  GNF: "GNF",
  GTQ: "GTQ",
  GYD: "GYD",
  HKD: "HKD",
  HNL: "HNL",
  HRK: "HRK",
  HTG: "HTG",
  HUF: "HUF",
  IDR: "IDR",
  ILS: "ILS",
  IMP: "IMP",
  INR: "INR",
  IQD: "IQD",
  IRR: "IRR",
  ISK: "ISK",
  JEP: "JEP",
  JMD: "JMD",
  JOD: "JOD",
  JPY: "JPY",
  KES: "KES",
  KGS: "KGS",
  KHR: "KHR",
  KMF: "KMF",
  KPW: "KPW",
  KRW: "KRW",
  KWD: "KWD",
  KYD: "KYD",
  KZT: "KZT",
  LAK: "LAK",
  LBP: "LBP",
  LKR: "LKR",
  LRD: "LRD",
  LSL: "LSL",
  LYD: "LYD",
  MAD: "MAD",
  MDL: "MDL",
  MGA: "MGA",
  MKD: "MKD",
  MMK: "MMK",
  MNT: "MNT",
  MOP: "MOP",
  MRU: "MRU",
  MUR: "MUR",
  MVR: "MVR",
  MWK: "MWK",
  MXN: "MXN",
  MYR: "MYR",
  MZN: "MZN",
  NAD: "NAD",
  NGN: "NGN",
  NIO: "NIO",
  NOK: "NOK",
  NPR: "NPR",
  NZD: "NZD",
  OMR: "OMR",
  PAB: "PAB",
  PEN: "PEN",
  PGK: "PGK",
  PHP: "PHP",
  PKR: "PKR",
  PLN: "PLN",
  PYG: "PYG",
  QAR: "QAR",
  RON: "RON",
  RSD: "RSD",
  RUB: "RUB",
  RWF: "RWF",
  SAR: "SAR",
  SBD: "SBD",
  SCR: "SCR",
  SDG: "SDG",
  SEK: "SEK",
  SGD: "SGD",
  SHP: "SHP",
  SLL: "SLL",
  SOS: "SOS",
  SRD: "SRD",
  SSP: "SSP",
  STD: "STD",
  STN: "STN",
  SVC: "SVC",
  SYP: "SYP",
  SZL: "SZL",
  THB: "THB",
  TJS: "TJS",
  TMT: "TMT",
  TND: "TND",
  TOP: "TOP",
  TRY: "TRY",
  TTD: "TTD",
  TWD: "TWD",
  TZS: "TZS",
  UAH: "UAH",
  UGX: "UGX",
  USD: "USD",
  UYU: "UYU",
  UZS: "UZS",
  VEF: "VEF",
  VES: "VES",
  VND: "VND",
  VUV: "VUV",
  WST: "WST",
  XAF: "XAF",
  XAG: "XAG",
  XAU: "XAU",
  XCD: "XCD",
  XDR: "XDR",
  XOF: "XOF",
  XPD: "XPD",
  XPF: "XPF",
  XPT: "XPT",
  YER: "YER",
  ZAR: "ZAR",
  ZMW: "ZMW",
  ZWL: "ZWL",
} as const;

/**
 * The country that the object is associated with, in ISO alpha 2 code
 * @nullable
 */
export type Country = (typeof Country)[keyof typeof Country] | null;

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const Country = {
  AF: "AF",
  AL: "AL",
  DZ: "DZ",
  AS: "AS",
  AD: "AD",
  AO: "AO",
  AI: "AI",
  AQ: "AQ",
  AG: "AG",
  AR: "AR",
  AM: "AM",
  AW: "AW",
  AU: "AU",
  AT: "AT",
  AZ: "AZ",
  BS: "BS",
  BH: "BH",
  BD: "BD",
  BB: "BB",
  BY: "BY",
  BE: "BE",
  BZ: "BZ",
  BJ: "BJ",
  BM: "BM",
  BT: "BT",
  BO: "BO",
  BQ: "BQ",
  BA: "BA",
  BW: "BW",
  BV: "BV",
  BR: "BR",
  IO: "IO",
  BN: "BN",
  BG: "BG",
  BF: "BF",
  BI: "BI",
  CV: "CV",
  KH: "KH",
  CM: "CM",
  CA: "CA",
  KY: "KY",
  CF: "CF",
  TD: "TD",
  CL: "CL",
  CN: "CN",
  CX: "CX",
  CC: "CC",
  CO: "CO",
  KM: "KM",
  CD: "CD",
  CG: "CG",
  CK: "CK",
  CR: "CR",
  HR: "HR",
  CU: "CU",
  CW: "CW",
  CY: "CY",
  CZ: "CZ",
  CI: "CI",
  DK: "DK",
  DJ: "DJ",
  DM: "DM",
  DO: "DO",
  EC: "EC",
  EG: "EG",
  SV: "SV",
  GQ: "GQ",
  ER: "ER",
  EE: "EE",
  SZ: "SZ",
  ET: "ET",
  FK: "FK",
  FO: "FO",
  FJ: "FJ",
  FI: "FI",
  FR: "FR",
  GF: "GF",
  PF: "PF",
  TF: "TF",
  GA: "GA",
  GM: "GM",
  GE: "GE",
  DE: "DE",
  GH: "GH",
  GI: "GI",
  GR: "GR",
  GL: "GL",
  GD: "GD",
  GP: "GP",
  GU: "GU",
  GT: "GT",
  GG: "GG",
  GN: "GN",
  GW: "GW",
  GY: "GY",
  HT: "HT",
  HM: "HM",
  VA: "VA",
  HN: "HN",
  HK: "HK",
  HU: "HU",
  IS: "IS",
  IN: "IN",
  ID: "ID",
  IR: "IR",
  IQ: "IQ",
  IE: "IE",
  IM: "IM",
  IL: "IL",
  IT: "IT",
  JM: "JM",
  JP: "JP",
  JE: "JE",
  JO: "JO",
  KZ: "KZ",
  KE: "KE",
  KI: "KI",
  KP: "KP",
  KR: "KR",
  KW: "KW",
  KG: "KG",
  LA: "LA",
  LV: "LV",
  LB: "LB",
  LS: "LS",
  LR: "LR",
  LY: "LY",
  LI: "LI",
  LT: "LT",
  LU: "LU",
  MO: "MO",
  MG: "MG",
  MW: "MW",
  MY: "MY",
  MV: "MV",
  ML: "ML",
  MT: "MT",
  MH: "MH",
  MQ: "MQ",
  MR: "MR",
  MU: "MU",
  YT: "YT",
  MX: "MX",
  FM: "FM",
  MD: "MD",
  MC: "MC",
  MN: "MN",
  ME: "ME",
  MS: "MS",
  MA: "MA",
  MZ: "MZ",
  MM: "MM",
  NA: "NA",
  NR: "NR",
  NP: "NP",
  NL: "NL",
  NC: "NC",
  NZ: "NZ",
  NI: "NI",
  NE: "NE",
  NG: "NG",
  NU: "NU",
  NF: "NF",
  MP: "MP",
  NO: "NO",
  OM: "OM",
  PK: "PK",
  PW: "PW",
  PS: "PS",
  PA: "PA",
  PG: "PG",
  PY: "PY",
  PE: "PE",
  PH: "PH",
  PN: "PN",
  PL: "PL",
  PT: "PT",
  PR: "PR",
  QA: "QA",
  MK: "MK",
  RO: "RO",
  RU: "RU",
  RW: "RW",
  RE: "RE",
  BL: "BL",
  SH: "SH",
  KN: "KN",
  LC: "LC",
  MF: "MF",
  PM: "PM",
  VC: "VC",
  WS: "WS",
  SM: "SM",
  ST: "ST",
  SA: "SA",
  SN: "SN",
  RS: "RS",
  SC: "SC",
  SL: "SL",
  SG: "SG",
  SX: "SX",
  SK: "SK",
  SI: "SI",
  SB: "SB",
  SO: "SO",
  ZA: "ZA",
  GS: "GS",
  SS: "SS",
  ES: "ES",
  LK: "LK",
  SD: "SD",
  SR: "SR",
  SJ: "SJ",
  SE: "SE",
  CH: "CH",
  SY: "SY",
  TW: "TW",
  TJ: "TJ",
  TZ: "TZ",
  TH: "TH",
  TL: "TL",
  TG: "TG",
  TK: "TK",
  TO: "TO",
  TT: "TT",
  TN: "TN",
  TR: "TR",
  TM: "TM",
  TC: "TC",
  TV: "TV",
  UG: "UG",
  UA: "UA",
  AE: "AE",
  GB: "GB",
  UM: "UM",
  US: "US",
  UY: "UY",
  UZ: "UZ",
  VU: "VU",
  VE: "VE",
  VN: "VN",
  VG: "VG",
  VI: "VI",
  WF: "WF",
  EH: "EH",
  YE: "YE",
  ZM: "ZM",
  ZW: "ZW",
  AX: "AX",
} as const;

/**
 * App Store type details. Should only be used when type is app_store.
 */
export type AppStoreAppCreateAppStore = {
  /**
   * The bundle ID of the app
   * @minLength 1
   * @maxLength 256
   */
  bundle_id: string;
  /**
   * The shared secret of the app
   * @minLength 32
   * @maxLength 32
   */
  shared_secret?: string;
  /**
   * In App Key id. The ID of the downloaded in app key. You can get it from App Store Connect
   * @minLength 1
   * @maxLength 32
   */
  subscription_key_id: string;
  /**
   * The key Issuer id. See instructions on how to obtain this in: https://www.revenuecat.com/docs/in-app-purchase-key-configuration#3-providing-the-issuer-id-to-revenuecat
   * @minLength 1
   * @maxLength 36
   */
  subscription_key_issuer: string;
  /**
   * PKCS /#8 In App Key downloaded from App Store Connect in PEM format. Copy the contents
of the file in this field. See instructions on how to get it in: 
https://www.revenuecat.com/docs/in-app-purchase-key-configuration

   * @minLength 1
   * @maxLength 4500
   */
  subscription_private_key: string;
};

export interface AppStoreAppCreate {
  /**
   * App Store type details. Should only be used when type is app_store.
   */
  app_store?: AppStoreAppCreateAppStore;
}

/**
 * App Store type details
 */
export type AppStoreAppAppStore = {
  /**
   * The bundle ID of the app
   * @minLength 1
   * @maxLength 256
   */
  bundle_id: string;
};

export interface AppStoreApp {
  /**
   * App Store type details
   */
  app_store?: AppStoreAppAppStore;
}

/**
 * The platform of the app.
Mac App Store is disabled by default. See [Legacy Mac Apps](https://www.revenuecat.com/docs/legacy-mac-apps) for more details.

 */
export type AppCreateAllOfType =
  (typeof AppCreateAllOfType)[keyof typeof AppCreateAllOfType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AppCreateAllOfType = {
  amazon: "amazon",
  app_store: "app_store",
  mac_app_store: "mac_app_store",
  play_store: "play_store",
  stripe: "stripe",
  rc_billing: "rc_billing",
  roku: "roku",
} as const;

export type AppCreateAllOf = {
  /**
   * The name of the app
   * @minLength 1
   * @maxLength 255
   */
  name: string;
  /**
   * The platform of the app.
Mac App Store is disabled by default. See [Legacy Mac Apps](https://www.revenuecat.com/docs/legacy-mac-apps) for more details.

   */
  type: AppCreateAllOfType;
};

export type AppCreate = AppCreateAllOf &
  AmazonAppCreate &
  AppStoreAppCreate &
  MacAppStoreAppCreate &
  PlayStoreAppCreate &
  StripeAppCreate &
  RCBillingAppCreate &
  RokuAppCreate;

export type App = AppAllOf &
  AmazonApp &
  AppStoreApp &
  MacAppStoreApp &
  PlayStoreApp &
  StripeApp &
  RCBillingApp &
  RokuApp;

/**
 * The platform of the app
 */
export type AppAllOfType = (typeof AppAllOfType)[keyof typeof AppAllOfType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AppAllOfType = {
  amazon: "amazon",
  app_store: "app_store",
  mac_app_store: "mac_app_store",
  play_store: "play_store",
  stripe: "stripe",
  rc_billing: "rc_billing",
  roku: "roku",
} as const;

/**
 * String representing the object's type. Objects of the same type share the same value.
 */
export type AppAllOfObject =
  (typeof AppAllOfObject)[keyof typeof AppAllOfObject];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AppAllOfObject = {
  app: "app",
} as const;

export type AppAllOf = {
  /**
   * The date when the app was created in ms since epoch
   */
  created_at: number;
  /**
   * The id of the app
   * @minLength 1
   * @maxLength 255
   */
  id: string;
  /**
   * The name of the app
   * @minLength 1
   * @maxLength 255
   */
  name: string;
  /** String representing the object's type. Objects of the same type share the same value. */
  object: AppAllOfObject;
  /**
   * The id of the project
   * @minLength 1
   * @maxLength 255
   */
  project_id: string;
  /**
   * The platform of the app
   */
  type: AppAllOfType;
};

/**
 * Amazon type details. Should only be used when type is amazon.
 */
export type AmazonAppCreateAmazon = {
  /**
   * The package name of the app
   * @minLength 1
   * @maxLength 256
   */
  package_name: string;
  /**
   * Your Amazon Developer Identity Shared Key
   */
  shared_secret?: string;
};

export interface AmazonAppCreate {
  /**
   * Amazon type details. Should only be used when type is amazon.
   */
  amazon?: AmazonAppCreateAmazon;
}

/**
 * Amazon type details
 */
export type AmazonAppAmazon = {
  /**
   * The package name of the app
   * @minLength 1
   * @maxLength 256
   */
  package_name: string;
};

export interface AmazonApp {
  /**
   * Amazon type details
   */
  amazon?: AmazonAppAmazon;
}
